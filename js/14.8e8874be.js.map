{"version":3,"file":"js/14.8e8874be.js","mappings":"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","sources":["webpack://webnav/../../../src/components/VCard/VCard.ts","webpack://webnav/../../../src/components/VCard/index.ts","webpack://webnav/../../../src/components/VDialog/VDialog.ts","webpack://webnav/../../../src/components/VThemeProvider/VThemeProvider.ts","webpack://webnav/../../../src/mixins/activatable/index.ts","webpack://webnav/../../../src/mixins/delayable/index.ts","webpack://webnav/../../../src/mixins/detachable/index.ts","webpack://webnav/../../../src/mixins/returnable/index.ts","webpack://webnav/../../../src/mixins/stackable/index.ts"],"sourcesContent":["// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Activatable,\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: [String, Number],\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: [String, Number],\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      stackMinZIndex: 200,\n      previousActiveElement: null as HTMLElement | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n        this.previousActiveElement?.focus()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      // Double nextTick to wait for lazy content to be generated\n      this.$nextTick(() => {\n        this.$nextTick(() => {\n          if (!this.$refs.dialog?.contains(document.activeElement)) {\n            this.previousActiveElement = document.activeElement as HTMLElement\n            this.$refs.dialog?.focus()\n          }\n          this.bind()\n        })\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        this.$refs.dialog &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.dialog].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.dialog.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.dialog.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'dialog',\n              'aria-modal': this.hideOverlay ? undefined : 'true',\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        attrs: {\n          tabindex: this.isActive ? 0 : undefined,\n        },\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: convertToUnit(this.maxWidth),\n          width: convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: (this.openOnClick && !this.openOnHover) ? 'button' : undefined,\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else if (this.openOnClick) {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      // The activator should only be a valid element (Ignore comments and text nodes)\n      this.activatorElement = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options {\n  $el: HTMLElement\n  $refs: {\n    content?: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\nfunction removeActivator (activator: VNode[]) {\n  activator.forEach(node => {\n    node.elm &&\n    node.elm.parentNode &&\n    node.elm.parentNode.removeChild(node.elm)\n  })\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    if (\n      this.$refs.content &&\n      this.$refs.content.parentNode\n    ) {\n      this.$refs.content.parentNode.removeChild(this.$refs.content)\n    }\n  },\n\n  destroyed () {\n    if (this.activatorNode) {\n      const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n      if (this.$el.isConnected) {\n        // Component has been destroyed but the element still exists, we must be in a transition\n        // Wait for the transition to finish before cleaning up the detached activator\n        const observer = new MutationObserver(list => {\n          if (\n            list.some(record => Array.from(record.removedNodes).includes(this.$el))\n          ) {\n            observer.disconnect()\n            removeActivator(activator)\n          }\n        })\n        observer.observe(this.$el.parentNode!, { subtree: false, childList: true })\n      } else {\n        removeActivator(activator)\n      }\n    }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n"],"names":["mixins","name","props","flat","hover","img","link","loaderHeight","type","Number","default","raised","Boolean","computed","classes","this","VSheet","styles","style","methods","genProgress","render","$createElement","staticClass","key","data","h","tag","setBackgroundColor","$slots","VCardActions","VCardSubtitle","VCardText","VCardTitle","baseMixins","directives","ClickOutside","dark","disabled","fullscreen","light","maxWidth","String","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","activatedBy","animate","animateTimeout","stackMinZIndex","previousActiveElement","contentClass","contentClasses","isActive","hasActivator","$scopedSlots","watch","created","$attrs","hasOwnProperty","beforeMount","beforeDestroy","window","unbind","animateClick","closeConditional","target","e","_isDestroyed","$refs","content","contains","overlay","$el","activeZIndex","hideScroll","document","show","bind","onClickOutside","onKeydown","getOpenDependents","activator","onFocusin","dialog","getOpenDependentElements","some","el","focusable","querySelectorAll","genContent","showLazyContent","VThemeProvider","root","class","attrs","role","hideOverlay","undefined","getScopeIdAttrs","on","keydown","zIndex","ref","genTransition","appear","genInnerContent","tabindex","value","handler","include","transformOrigin","attach","isDark","node","validator","val","includes","internalActivator","openOnClick","openOnHover","openOnFocus","activatorElement","activatorNode","events","listeners","mounted","slotType","addActivatorEvents","keys","Object","genActivator","genActivatorAttributes","genActivatorListeners","getActivator","length","vm","m","Node","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","openDelay","closeDelay","openTimeout","closeTimeout","clearDelay","clearTimeout","runDelay","delay","parseInt","setTimeout","cb","open","close","validateAttachTarget","removeActivator","hasDetached","hasContent","Array","parentNode","deactivated","destroyed","observer","MutationObserver","list","record","observe","subtree","childList","scopeId","initDetach","returnValue","originalValue","save","stackElement","stackExclude","index","getMaxZIndex","exclude","base","zis","activeElements","Math"],"sourceRoot":""}