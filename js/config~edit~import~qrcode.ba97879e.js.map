{"version":3,"sources":["webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/components/VCard/VCard.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/components/VCard/index.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/mixins/activatable/index.ts"],"names":["name","data","stackElement","stackExclude","stackMinZIndex","isActive","computed","activeZIndex","window","content","this","$refs","index","getMaxZIndex","parseInt","methods","exclude","base","zis","activeElements","document","Math","props","root","Boolean","isDark","render","$slots","default","node","openDelay","type","Number","closeDelay","openTimeout","closeTimeout","undefined","clearDelay","clearTimeout","runDelay","delay","setTimeout","cb","open","close","flat","hover","img","link","loaderHeight","raised","classes","styles","style","genProgress","$createElement","staticClass","key","h","tag","setBackgroundColor","validateAttachTarget","val","Node","attach","validator","contentClass","activatorNode","hasDetached","watch","hasContent","beforeMount","activator","Array","target","mounted","deactivated","beforeDestroy","e","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","baseMixins","directives","ClickOutside","dark","disabled","fullscreen","light","maxWidth","String","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","activatedBy","animate","animateTimeout","previousActiveElement","contentClasses","hasActivator","$scopedSlots","created","$attrs","hasOwnProperty","unbind","animateClick","closeConditional","contains","overlay","$el","hideScroll","show","bind","onClickOutside","onKeydown","getOpenDependents","onFocusin","getOpenDependentElements","some","el","focusable","querySelectorAll","genContent","showLazyContent","class","attrs","role","tabindex","on","keydown","zIndex","ref","genTransition","appear","genInnerContent","value","handler","include","transformOrigin","VCardActions","VCardSubtitle","VCardText","VCardTitle","returnValue","originalValue","save","includes","internalActivator","openOnHover","openOnFocus","activatorElement","events","listeners","slotType","addActivatorEvents","keys","Object","genActivator","genActivatorAttributes","genActivatorListeners","getActivator","length","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator"],"mappings":"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","file":"js/config~edit~import~qrcode.ba97879e.js","sourcesContent":["import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n      previousActiveElement: null as HTMLElement | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n        this.previousActiveElement?.focus()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      // Double nextTick to wait for lazy content to be generated\n      this.$nextTick(() => {\n        this.$nextTick(() => {\n          this.previousActiveElement = document.activeElement as HTMLElement\n          this.$refs.content.focus()\n          this.bind()\n        })\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n          width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n"],"sourceRoot":""}